#!/bin/bash

set -e  # Exit on any error

# Check if we are running as root
if [ "$(id -u)" -ne 0 ]; then
    echo "Please run as root 'sudo add-email-domain'"
    exit 1
fi

# Prompt for domain
read -p "Enter your domain name (e.g. example.com): " domain_name

if [[ -z "$domain_name" ]]; then
    echo "Error: Domain name cannot be empty."
    exit 1
fi

echo "Creating directories..."
mkdir -p /etc/opendkim/keys/${domain_name}

mkdir -p /var/mail/vhosts/${domain_name}
chown vmail:vmail /var/mail/vhosts/${domain_name}
chmod 2770 /var/mail/vhosts/${domain_name}

# --- Generate DKIM keys ---
echo "Generating DKIM keys..."
opendkim-genkey -b 2048 -d ${domain_name} -s mail -D /etc/opendkim/keys/${domain_name}
chown -R opendkim:opendkim /etc/opendkim/keys/${domain_name}
chmod 600 /etc/opendkim/keys/${domain_name}/mail.private

echo "Updating DKIM tables..."
echo -e "mail._domainkey.${domain_name} ${domain_name}:mail:/etc/opendkim/keys/${domain_name}/mail.private" >> /etc/opendkim/KeyTable
echo -e "*@${domain_name} mail._domainkey.${domain_name}" >> /etc/opendkim/SigningTable

echo "Adding domain to OpenDKIM and Postfix"
echo -e "${domain_name}" >> /etc/opendkim/TrustedHosts
echo -e "${domain_name} OK" >> /etc/postfix/virtual_mailbox_domains

# --- Reload OpenDKIM ---
echo "Reloading OpenDKIM..."
systemctl reload opendkim

# --- Reload Postfix ---
echo "Reloading Postfix..."
postmap /etc/postfix/virtual_mailbox_domains
systemctl reload postfix

echo ""
echo ""
echo "DMARC setup"
echo ""
echo "Enter the email for DKIM/SPF failure reports."
echo ""

read -p "Enter email (e.g., postmaster@example.com): " dmarc_ruf

if [[ -z "$dmarc_ruf" ]]; then
    echo "Error: Email cannot be empty."
    exit 1
fi

read -p "Also get daily summary (rua) reports at the same address? (y/n): " rua_choice

if [[ "$rua_choice" =~ ^[Yy]$ ]]; then
    dmarc_record="v=DMARC1; p=reject; sp=reject; adkim=r; aspf=r; rua=mailto:${dmarc_ruf}; ruf=mailto:${dmarc_ruf}; fo=1"
else
    dmarc_record="v=DMARC1; p=reject; sp=reject; adkim=r; aspf=r; ruf=mailto:${dmarc_ruf}; fo=1"
fi

echo ""
echo ""
echo "DNS Records"

# Function to print MX block
print_mx_block() {
    local mx="$1"
    echo "------------------------------------------------------"
    echo "Host/Name: ${domain_name}"
    echo "Type: MX"
    echo "Value: $mx"
    echo "------------------------------------------------------"
    echo ""
}
# Check if main MX file exists
if [ -f /etc/mx_names ]; then
    while IFS= read -r mx; do
        print_mx_block "$mx"
    done < /etc/mx_names
else
    echo "MX record file not found: /etc/mx_names"
fi
echo "If the mail domain has additional servers, add them manually (e.g., mx1, mx2)."
echo "Optional: You can list extra MX servers in /etc/mx_names (one per line) for future automation."
echo ""

echo "------------------------------------------------------"
echo "Host/Name: ${domain_name}"
echo "Type: TXT"
echo -e "Value: \"v=spf1 a mx -all\""
echo "------------------------------------------------------"
echo "Host/Name: _dmarc.${domain_name}"
echo "Type: TXT"
echo "Value: \"${dmarc_record}\""
echo "------------------------------------------------------"
echo "The DKIM DNS record info is stored in:"
echo "  /etc/opendkim/keys/${domain_name}/mail.txt"
echo ""
echo "Here is the TXT record in a single line:"
echo ""

dns_content=$(sed -n '/(/,/)/p' "/etc/opendkim/keys/${domain_name}/mail.txt" | sed '
  1s/^[^(]*(//
  $s/)[^)]*$//
')
dns_content=$(echo "$dns_content" | tr -d '\n' | sed 's/^[ \t]*//;s/[ \t]*$//')
dns_content=$(echo "$dns_content" | sed -E 's/"[ \t]+"/" "/g')

echo "Host/Name: mail._domainkey.${domain_name}"
echo "Type: TXT"
echo "Value: ${dns_content}"
echo "------------------------------------------------------"
echo "You can verify the DKIM record with:"
echo "  dig +short TXT mail._domainkey.${domain_name}"
echo "------------------------------------------------------"
echo ""
echo "Finished adding domain!"
